{"id": "sucrose-area","type": "area","title": "Stacked Area Chart","optionPresets": {"file": "line_data","show_labels": "1"},"yAxisLabel": "Y-axis label","xAxisLabel": "X-axis label","optionDefaults": {"show_labels": "0","mirror_axis": "lab","tick_display": ["wrap","stagger","rotate"]},"ui": {"[name=file]": {"values": [{"value": "line_data","label": "Test Line Chart Data #1"}]},"[name=mirror_axis]": {"init": "function ($o) {\n          this.initControl($o.attr('name'));\n        }","bind": "function (d,v,$o) {\n          return this.bindControl(d, $o.attr('name'), v, this.chartUpdater());\n        }","chartInit": "function (v,self) {\n          self.Chart.yAxis\n            .orient(v === 'lab' ? 'left' : 'right');\n          self.Chart.xAxis\n            .orient(v === 'lab' ? 'bottom' : 'top');\n        }","check": "new RegExp(/0|1/i)","events": "change.my","title": "Mirror Axes","type": "radio","values": [{"value": "lab","label": "Left/Bottom"},{"value": "rat","label": "Right/Top"}]},"[name=show_labels]": {"init": "function ($o) {\n          this.initControl($o.attr('name'));\n        }","bind": "function (d,v,$o) {\n          return this.bindControl(d, $o.attr('name'), v, this.chartRenderer());\n        }","chartInit": "function (v,self) {\n          var value = !!parseInt(v, 10);\n          self.Chart.xAxis.axisLabel(value ? self.xAxisLabel : null);\n          self.Chart.yAxis.axisLabel(value ? self.yAxisLabel : null);\n        }","check": "new RegExp(/0|1/i)","events": "change.my","title": "Show Axes Labels","type": "radio","values": [{"value": "0","label": "No"},{"value": "1","label": "Yes"}]},"[name=tick_display]": {"init": "function ($o) {\n          this.initControl($o.attr('name'));\n        }","bind": "function (d,v,$o) {\n          return this.bindControl(d, $o.attr('name'), v, this.chartRenderer());\n        }","chartInit": "function (v,self) {\n          var wrapTicks = $.inArray('wrap', v) !== -1,\n              staggerTicks = $.inArray('stagger', v) !== -1,\n              rotateTicks = $.inArray('rotate', v) !== -1;\n          self.Chart\n            .wrapTicks(wrapTicks)\n            .staggerTicks(staggerTicks)\n            .rotateTicks(rotateTicks);\n        }","check": "new RegExp(/wrap|stagger|rotate/i)","events": "change.my","title": "Tick Display Methods","type": "checkbox","values": [{"value": "wrap","label": "Wrap"},{"value": "stagger","label": "Stagger"},{"value": "rotate","label": "Rotate"}]}}}
